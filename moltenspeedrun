local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local Workspace = game:GetService("Workspace")
local Things = Workspace:WaitForChild("__THINGS")
local Active = Things.__INSTANCE_CONTAINER:WaitForChild("Active")
local Player = Players.LocalPlayer
local character = Player.Character or Player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local ActiveBlocks = Active.AdvancedDigsite.Important.ActiveBlocks
local ActiveChests = Active.AdvancedDigsite.Important.ActiveChests

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Network = ReplicatedStorage:WaitForChild("Network")
local Instancing_FireCustomFromClient = Network:WaitForChild("Instancing_FireCustomFromClient")

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

-- Define default settings
local defaultSettings = {
    DigSite = false,
}

-- Load settings
local savedSettings = SaveManager:Load("AniHub/specific-game/settings") or defaultSettings

-- Update settings
local function updateSettings(newSettings)
    for key, value in pairs(newSettings) do
        savedSettings[key] = value
    end
end

-- Save settings
local function saveSettings()
    SaveManager:Save("AniHub/specific-game/settings", savedSettings)
end

-- Continue with your existing code...

-- Your existing code...

local Window = Fluent:CreateWindow({
    Title = "Ani's script PS99",
    SubTitle = "by Ani",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = false,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.Delete
})

local Tabs = {
    Digging = Window:AddTab({ Title = "Digging", Icon = "" }),
}

local Options = Fluent.Options

do
    local Toggle = Tabs.Digging:AddToggle("DigSite", { Title = "Auto AdvancedDigsite", Default = savedSettings.DigSite })
    Toggle:OnChanged(function()
        local isToggled = Options.DigSite.Value
        local humanoidRootPartCFrame = humanoidRootPart.CFrame
        local characterChildren = character:GetChildren()

        for _, part in ipairs(characterChildren) do
            if part:IsA("BasePart") then
                part.CanCollide = not isToggled
                part.Velocity = Vector3.new(0, 0, 0)
            end
        end

        local orbs = workspace.__THINGS.Orbs:GetChildren()

        spawn(function()
            while isToggled and wait() do
                pcall(dig)
            end
        end)

        spawn(function()
            while isToggled and wait(1) do
                for _, orb in ipairs(orbs) do
                    orb.Position = humanoidRootPartCFrame.Position
                end
            end
        end)
        
        savedSettings.DigSite = isToggled
        saveSettings()
    end)
end

InterfaceManager:SetLibrary(Fluent)
SaveManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("AniHub")
SaveManager:SetFolder("AniHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Digging)
SaveManager:BuildConfigSection(Tabs.Digging)

Window:SelectTab(1)

Fluent:Notify({
    Title = "Ani's fix script'",
    Content = "Script loaded.",
    Duration = 4
})

SaveManager:LoadAutoloadConfig()
